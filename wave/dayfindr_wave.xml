<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
<ModulePrefs title="State Example" height="120">
    <Require feature="wave" /> 
  </ModulePrefs>
<Content type="html">
<![CDATA[ 
	 
	 <div id="content_div" style="height: 50px;"></div>
	 <script type="text/javascript">

	 var months = [];
	 months[0] = "Jan";
	 months[1] = "Feb";
	 months[2] = "Mar";
	 months[3] = "Apr";
	 months[4] = "May";
	 months[5] = "Jun";
	 months[6] = "Jul";
	 months[7] = "Aug";
	 months[8] = "Sep";
	 months[9] = "Oct";
	 months[10] = "Nov";
	 months[11] = "Dec";


	 function getNextYearAndMonth(year, month) {
	   var yearAndMonth = [];
	   if (month == 11) {
	     yearAndMonth[0] = year + 1;
	     yearAndMonth[1] = 0;
	   } else {
	     yearAndMonth[0] = year;
	     yearAndMonth[1] = month + 1;
	   }
	   return yearAndMonth;
	 }

	 function daysInMonth(year, month) {
	   return 32 - new Date(year, month, 32).getDate();
	 }

	 function createCal(days) {

	   var preSync = true;
	   var postSync = false;
	   var dayOffset = 0;
	   var numberOfDaysLeft = days.length;
	   
	   var calHtml = '';
	   calHtml += '<table>';
	   for (var week = 0; (week < 6) && (numberOfDaysLeft > 0); ++week) {

	     calHtml += '<tr>';
	     for (var day = 0; day < 7; ++day) {

	       var i = week*7 + day;
	       if (preSync) {
		 if (days[0].getDay() == i) {
		   preSync = false;
		   dayOffset = i;
		 }
	       } else {
		 if ((i - dayOffset) >= days.length) {
		   postSync = true;
		 }
	       }

	       if (preSync) {
		 calHtml += '<td>x</td>';
	       } else if (postSync) {
		 calHtml += '<td>x</td>';
	       } else {
		 calHtml += '<td>' + days[i - dayOffset].getDate() + '</td>';
		 --numberOfDaysLeft;
	       }
   
	     }
	     calHtml += '</tr>';
	   }
    
	   calHtml += '</table>';
	   return calHtml;
	 }

	 function createCalendarHTML() {
	   var calendarHtml = '<div>';

	   var today = new Date();
	   year = today.getFullYear();
	   month = today.getMonth();
	   for (var i = 0; i < 5; ++i) {
    
	     var N = daysInMonth(year, month);
	     var days = [];
	     for (var d = 0; d < N; ++d) {
	       days[d] = new Date(year, month, d + 1);
	     }

	     monthHtml = createCal(days);
	     calendarHtml += monthHtml;
	   
	     var nextYearAndMonth = getNextYearAndMonth(year, month);
	     year = nextYearAndMonth[0];
	     month = nextYearAndMonth[1];
	   }
	 
	   calendarHtml += "</div>";
	   return calendarHtml;
	 }
	 
	 var div = document.getElementById('content_div');
	 
	 function buttonClicked() {
	   var today = new Date();
	   var attend = {};
	   attend.year = today.getFullYear();
	   attend.month = today.getMonth();
	   attend.day = today.getDate();
	   
	   var viewerId = wave.getViewer().getId();
	   var daysJSON = wave.getState().get(viewerId, '[]');
	   var currentDays = JSON.parse(daysJSON);
	   var newDays = new Array();
	   var found = false;
	   var copyIndex = 0;
	   for(var i = 0; i < currentDays.length; ++i) {
	     currentDay = currentDays[i];
	     if (currentDay.day == attend.day
		 &&
		 currentDay.month == attend.month
		 &&
		 currentDay.year == attend.year) {
	     } else {
	       newDays[copyIndex] = currentDay;
	       ++copyIndex;
	     }
	   }
	   // If the result is the same length as the original,
	   // the current day was not found so it must be appended
	   if (copyIndex == currentDays.length) {
	     newDays[copyIndex] = attend;
	   }
		   
	   var checked = wave.getState().get(viewerId);
	   var delta = {};
	   delta[viewerId] = JSON.stringify(newDays);
	   wave.getState().submitDelta(delta);
	 }
	       
	 function stateUpdated() {
		   
	   var keys = wave.getState().getKeys();
	   var newInner = '';
	   for (var i = 0; i < keys.length; ++i) {
	     newInner += keys[i] + ':' + wave.getState().get(keys[i]) + '<br>';
	   }
	   div.innerHTML = div.innerHTML + newInner;
	 }
 
	 function init() {
	   if (wave && wave.isInWaveContainer()) {
	     wave.setStateCallback(stateUpdated);
	   }
	   div.innerHTML = createCalendarHTML();
	 }
	 gadgets.util.registerOnLoadHandler(init);

	 </script>
	 <input type=button value="Attend" id="butCount" onClick="buttonClicked()">
	  ]]> 

  </Content>
</Module>
