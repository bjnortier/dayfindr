<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
<ModulePrefs title="State Example" height="400" scrolling="true">
<Require feature="wave" /> 
</ModulePrefs>
<Content type="html">
<![CDATA[ 
	 
	 <style  TYPE="text/css">
	 td.dayfindr {
      border: solid thin black;
      }
	 </style>
	 <div id="content_div" style="height: 50px;"></div>
	 <script type="text/javascript">

	 var months = [];
	 months[0] = "Jan";
	 months[1] = "Feb";
	 months[2] = "Mar";
	 months[3] = "Apr";
	 months[4] = "May";
	 months[5] = "Jun";
	 months[6] = "Jul";
	 months[7] = "Aug";
	 months[8] = "Sep";
	 months[9] = "Oct";
	 months[10] = "Nov";
	 months[11] = "Dec";


	 function getNextYearAndMonth(year, month) {
	   var yearAndMonth = [];
	   if (month == 11) {
	     yearAndMonth[0] = year + 1;
	     yearAndMonth[1] = 0;
	   } else {
	     yearAndMonth[0] = year;
	     yearAndMonth[1] = month + 1;
	   }
	   return yearAndMonth;
	 }

	 function daysInMonth(year, month) {
	   return 32 - new Date(year, month, 32).getDate();
	 }

	 function createMonthHTML(days) {

	   var preSync = true;
	   var postSync = false;
	   var dayOffset = 0;
	   var numberOfDaysLeft = days.length;
	   
	   var calHtml = '';
	   calHtml += '<table>';
	   for (var week = 0; (week < 6) && (numberOfDaysLeft > 0); ++week) {

	     calHtml += '<tr>';
	     for (var dayOfWeek = 0; dayOfWeek < 7; ++dayOfWeek) {

	       var i = week*7 + dayOfWeek;
	       if (preSync) {
		 if (days[0].getDay() == i) {
		   preSync = false;
		   dayOffset = i;
		 }
	       } else {
		 if ((i - dayOffset) >= days.length) {
		   postSync = true;
		 }
	       }

	       if (preSync) {
		 calHtml += '<td>x</td>';
	       } else if (postSync) {
		 calHtml += '<td>x</td>';
	       } else {
		 var date = days[i - dayOffset];
		 var year = date.getFullYear();
		 var month = date.getMonth();
		 var day = date.getDate();
		 var onclick = 'dayClicked(' + year + ',' + month + ',' + day + ')';
		 calHtml += '<td class="dayfindr"><a href="#" onclick="' + onclick + '">' + date.getDate() + '</a>';

		 var keys = wave.getState().getKeys();
		 var newInner = '';

		 var dayStruct = {};
		 dayStruct.year = year;
		 dayStruct.month = month;
		 dayStruct.day = day;
		 
		 for (var i = 0; i < keys.length; ++i) {
		   var participantId = keys[i];
		   var daysAttending = JSON.parse(wave.getState().get(participantId));
		   
		   wave.log(daysAttending + ':' + dayStruct);
		   for (var j = 0; j < daysAttending.length; ++j) {
		     if (daysAttending[j].year == year
			 &&
			 daysAttending[j].month == month
			 &&
			 daysAttending[j].day == day) {

		       var participant = wave.getParticipantById(participantId);
		       var thumbnailURL = participant.getThumbnailUrl();
		       calHtml += '<img src="' + thumbnailURL + '" alt="' + participantId + '"/>';
		       //calHtml += participantId + '<br>';
		     }
		   }
		 }

		 calHtml += '</td>';

		 --numberOfDaysLeft;
	       }
   
	     }
	     calHtml += '</tr>';
	   }
    
	   calHtml += '</table>';
	   return calHtml;
	 }

	 function createCalendarHTML() {
	   var calendarHtml = '<div>';

	   var today = new Date();
	   year = today.getFullYear();
	   month = today.getMonth();
	   for (var i = 0; i < 2; ++i) {
    
	     var N = daysInMonth(year, month);
	     var days = [];
	     for (var d = 0; d < N; ++d) {
	       days[d] = new Date(year, month, d + 1);
	     }

	     calendarHtml += '<div>' + year + '.' + (month + 1) + ' </div>';
	     calendarHtml += createMonthHTML(days);
	   
	     var nextYearAndMonth = getNextYearAndMonth(year, month);
	     year = nextYearAndMonth[0];
	     month = nextYearAndMonth[1];
	   }
	 
	   calendarHtml += "</div>";
	   return calendarHtml;
	 }
	 
	 var div = document.getElementById('content_div');

	 function dayClicked(year, month, day) {

	   var attend = {};
	   attend.year = year;
	   attend.month = month;
	   attend.day = day;
	   
	   var viewerId = wave.getViewer().getId();
	   var daysJSON = wave.getState().get(viewerId, '[]');
	   var currentDays = JSON.parse(daysJSON);
	   var newDays = new Array();
	   var found = false;
	   var copyIndex = 0;
	   for(var i = 0; i < currentDays.length; ++i) {
	     currentDay = currentDays[i];
	     if (currentDay.day == attend.day
		 &&
		 currentDay.month == attend.month
		 &&
		 currentDay.year == attend.year) {
	     } else {
	       newDays[copyIndex] = currentDay;
	       ++copyIndex;
	     }
	   }
	   // If the result is the same length as the original,
	   // the current day was not found so it must be appended
	   if (copyIndex == currentDays.length) {
	     newDays[copyIndex] = attend;
	   }
		   
	   var checked = wave.getState().get(viewerId);
	   var delta = {};
	   delta[viewerId] = JSON.stringify(newDays);
	   wave.getState().submitDelta(delta);
	 }
	       
	 function stateUpdated() {
	   div.innerHTML = createCalendarHTML();
	   //gadgets.window.adjustHeight();
	 }
 
	 function init() {
	   if (wave && wave.isInWaveContainer()) {
	     wave.setStateCallback(stateUpdated);
	   }
	 }
	 gadgets.util.registerOnLoadHandler(init);

	 </script>
	 
	  ]]> 

  </Content>
</Module>
